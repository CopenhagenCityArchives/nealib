// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace HardHorn.Resources
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using HardHorn.Archiving;
    using HardHorn.ViewModels;
    using System.Windows.Data;
    using System.Web;
    using HardHorn.Utility;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class NotificationLog : NotificationLogBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("<!doctype html>\r\n<html>\r\n<head>\r\n<meta charset=\"UTF-8\">\r\n<meta name=\"viewport\" co" +
                    "ntent=\"width=device-width, initial-scale=1.0\">\r\n<style>\r\n\th1 { font-size: 1.5em;" +
                    " }\r\n\th2 { font-size: 1.25em; }\r\n\th3 { font-size: 1.0em;}\r\n\tbody { font-size: 0.8" +
                    "em; }\r\n\tth, td { padding: 2px; }\r\n\tth { text-align: left; white-space: nowrap; }" +
                    "\r\n\ttable { border-collapse: collapse; border-spacing: 0; }\r\n\t.sort {display:inli" +
                    "ne-block; width: 0; height: 0; border-left: 8px solid transparent; border-right:" +
                    " 8px solid transparent; }\r\n\t.expanded span  {margin: 0 0 3px 0; display:inline-b" +
                    "lock; border-top:  5px solid black; border-left: 5px solid transparent; border-r" +
                    "ight:  5px solid transparent; width: 0; height: 0; position: relative;}\r\n\t.colla" +
                    "psed span {margin: 0 0 0 3px; display:inline-block; border-left: 5px solid black" +
                    "; border-top:  5px solid transparent; border-bottom: 5px solid transparent; widt" +
                    "h: 0; height: 0; position: relative;}\r\n\t.expander {cursor:pointer;}\r\n\t.sortable " +
                    "{cursor:pointer;}\r\n\t.asc {border-bottom: 10px solid black;}\r\n\t.desc {border-top:" +
                    " 10px solid black;}\r\n\t.value {font-family: \"Lucida Console\", Monaco, monospace;}" +
                    "\r\n\t.empty {font-weight: bold; color: brown;}\r\n\t.null {font-weight: bold; color: " +
                    "blue;}\r\n\t.samples-table {margin: 0 0.8em 0.8em 0.8em; font-size: 0.7em;}\r\n\t.odd," +
                    " .odd + .samplerow {background: #f5f5f5}\r\n\t.odd > td:nth-child(even) { backgroun" +
                    "d: #f6f6f6; }\r\n\t.even > td-nth-child(odd) { background: #fdfdfd; }\r\n\t.samples-ta" +
                    "ble > tbody > tr:nth-child(odd) { background: #f5f5f5;}\r\n\t.samples-table > tbody" +
                    " > tr:nth-child(even) { background: #ffffff;}\r\n\t.samples-table > tbody > tr:nth-" +
                    "child(odd) > td:nth-child(even) { background: #f6f6f6;}\r\n\t.samples-table > tbody" +
                    " > tr:nth-child(even) > td:nth-child(odd) { background: #fdfdfd;}\r\n\t.header-acti" +
                    "ons {font-weight: normal; font-size: 0.8em;}\r\n\tspan.data:before, span.data:after" +
                    " {\r\n\t\tcontent: \"\\\"\";\r\n\t\tcolor: gray;\r\n\t\tfont-weight: bold;\r\n\t}\r\n</style>\r\n<scrip" +
                    "t>\r\n\tfunction toggleSamples(sender, sampleRow) {\r\n\t\tif (sampleRow.style.display " +
                    "=== \'none\')\r\n\t\t{\r\n\t\t\tsampleRow.style.display = \'table-row\';\r\n\t\t\tsender.classList" +
                    " = \"expander expanded\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsampleRow.style.display = \'none\';\r" +
                    "\n\t\t\tsender.classList = \"expander collapsed\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction expandAll(con" +
                    "tainer)\r\n\t{\r\n\t\tvar elems = Array.prototype.slice.call(container.getElementsByCla" +
                    "ssName(\'collapsed\'));\r\n\t\tfor (var i = 0; i < elems.length; i++) {\r\n\t\t\telems[i].o" +
                    "nclick();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction collapseAll(container)\r\n\t{\r\n\t\tvar elems = Array." +
                    "prototype.slice.call(container.getElementsByClassName(\'expanded\'));\r\n\t\tfor (var " +
                    "i = 0; i < elems.length; i++) {\r\n\t\t\telems[i].onclick();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction so" +
                    "rtBy(sender, table, sortColumnIndex) {\r\n\t\tvar sortTypeElem = table.children[0].c" +
                    "hildren[0].children[sortColumnIndex].getElementsByTagName(\'strong\')[0];\r\n\t\tvar s" +
                    "ortType = \'\';\r\n\t\tif (sortTypeElem != undefined) {\r\n\t\t\tsortType = sortTypeElem.in" +
                    "nerText;\r\n\t\t}\r\n\t\tvar rows = [];\r\n\t\tvar trs = table.children[1].children;\r\n\t\tfor " +
                    "(var i = 0; i < trs.length; i++) {\r\n\t\t\tif (trs[i].classList == \"samplerow\")\r\n\t\t\t" +
                    "{\r\n\t\t\t\trows[rows.length-1].sampleRow = trs[i];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\trows.pu" +
                    "sh(trs[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar glyphs = table.getElementsByClassName(\'sort\');\r\n\t\t" +
                    "for (var i = 0; i < glyphs.length; i++) {\r\n\t\t\tglyphs[i].remove();\r\n\t\t}\r\n\t\tif (ta" +
                    "ble.lastSortType == sortType) {\r\n\t\t\ttable.sortAscending = !table.sortAscending;\r" +
                    "\n\t\t\trows.reverse();\r\n\t\t} else {\r\n\t\t\ttable.sortAscending = true;\r\n\t\t\ttable.lastSo" +
                    "rtType = sortType;\r\n\t\t\trows.sort(getSortFunc(sortType, sortColumnIndex)); \r\n\t\t}\r" +
                    "\n\t\taddGlyph(table, sortColumnIndex);\r\n\t\treaddRows(rows);\r\n\t}\r\n\r\n\tfunction getSor" +
                    "tFunc(sortType, sortColumnIndex) {\r\n\tswitch (sortType) {\r\n\t\tcase \'Felt\':\r\n\t\t\tret" +
                    "urn function(row1, row2) {\r\n\t\t\t\tvar idx = sortColumnIndex;\r\n\t\t\t\tvar field1 = row" +
                    "1.children[idx].innerText;\r\n\t\t\t\tvar field2 = row2.children[idx].innerText;\r\n\t\t\t\t" +
                    "if (field1 == \'-\') {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (field2 == \'-\') {\r\n\t\t\t\t\tret" +
                    "urn 1;\r\n\t\t\t\t}\r\n\t\t\t\tvar f1 = parseInt(field1.substr(2, field1.indexOf(\':\')-2));\r\n" +
                    "\t\t\t\tvar f2 = parseInt(field2.substr(2, field2.indexOf(\':\')-2));\r\n\t\t\t\treturn f1-f" +
                    "2;\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase \'Tabel\':\r\n\t\t\treturn function(row1, row2) {\r\n\t\t\t\tvar" +
                    " idx = sortColumnIndex;\r\n\t\t\t\tvar field1 = row1.children[idx].innerText;\r\n\t\t\t\tvar" +
                    " field2 = row2.children[idx].innerText;\r\n\t\t\t\tif (field1 == \'-\') {\r\n\t\t\t\t\treturn -" +
                    "1;\r\n\t\t\t\t}\r\n\t\t\t\tif (field2 == \'-\') {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tvar f1 = parseIn" +
                    "t(field1.substr(6, field1.indexOf(\':\')-6));\r\n\t\t\t\tvar f2 = parseInt(field2.substr" +
                    "(6, field2.indexOf(\':\')-6));\r\n\t\t\t\treturn f1-f2;\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase \'Række" +
                    "\':\r\n\t\tcase \'Antal\':\r\n\t\tcase \'Længde\':\r\n\t\t\treturn function(row1, row2) {\r\n\t\t\t\tvar" +
                    " idx = sortColumnIndex;\r\n\t\t\t\tvar field1 = row1.children[idx].innerText;\r\n\t\t\t\tvar" +
                    " field2 = row2.children[idx].innerText;\r\n\t\t\t\tif (field1 == \'-\') {\r\n\t\t\t\t\treturn -" +
                    "1;\r\n\t\t\t\t}\r\n\t\t\t\tif (field2 == \'-\') {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn parseInt(" +
                    "field1) - parseInt(field2);\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn function(ro" +
                    "w1, row2) {\r\n\t\t\t\tvar idx = sortColumnIndex;\r\n\t\t\t\tvar field1 = row1.children[idx]" +
                    ".innerText;\r\n\t\t\t\tvar field2 = row2.children[idx].innerText;\r\n\t\t\t\tif (field1 == \'" +
                    "-\') {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (field2 == \'-\') {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n" +
                    "\t\t\t\treturn field1.localeCompare(field2);\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction" +
                    " readdRows(rows) {\r\n\t\tfor (var i = 0; i < rows.length; i++) {\r\n\t\t\tvar parent = r" +
                    "ows[i].parentNode;\r\n\t\t\tvar detached = parent.removeChild(rows[i]);\r\n\t\t\tif (detac" +
                    "hed.sampleRow)\r\n\t\t\t{\r\n\t\t\t\tparent.removeChild(detached.sampleRow);\r\n\t\t\t}\r\n\t\t\tif (" +
                    "i % 2 == 0) {\r\n\t\t\t\tdetached.classList.replace(\'even\', \'odd\');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t" +
                    "\t{\r\n\t\t\t\tdetached.classList.replace(\'odd\', \'even\');\r\n\t\t\t}\r\n\t\t\tparent.appendChild(" +
                    "detached); \r\n\t\t\tif (detached.sampleRow)\r\n\t\t\t{\r\n\t\t\t\tparent.appendChild(detached.s" +
                    "ampleRow);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addGlyph(table, columnIndex) {\r\n\t\tvar gly" +
                    "ph = document.createElement(\'span\');\r\n\t\tglyph.classList.add(\'sort\');\r\n\t\tif (tabl" +
                    "e.sortAscending) {\r\n\t\t\tglyph.classList.add(\'asc\');\r\n\t\t} else {\r\n\t\t\tglyph.classLi" +
                    "st.add(\'desc\');\r\n\t\t}\r\n\t\ttable.children[0].children[0].children[columnIndex].appe" +
                    "ndChild(glyph);\r\n\t}\r\n</script>\r\n<title>");
            
            #line 214 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ArchiveVersion.Id));
            
            #line default
            #line hidden
            this.Write(" - ");
            
            #line 214 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(System.Reflection.Assembly.GetExecutingAssembly().GetName().Name));
            
            #line default
            #line hidden
            this.Write(" Log</title>\r\n</head>\r\n<body style=\"font-family: verdana, sans-serif;\">\r\n<h1>");
            
            #line 217 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ArchiveVersion.Id));
            
            #line default
            #line hidden
            this.Write(" - ");
            
            #line 217 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(System.Reflection.Assembly.GetExecutingAssembly().GetName().Name));
            
            #line default
            #line hidden
            this.Write(" Log</h1>\r\n<p><strong>Tidspunkt:</strong> ");
            
            #line 218 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now));
            
            #line default
            #line hidden
            this.Write("</p>\r\n<h2 id=\"oversigt\">Oversigt</h2>\r\n<ul>\r\n");
            
            #line 221 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

foreach (CollectionViewGroup group in NotificationGroups)
{
	string groupNameEncoded = HttpUtility.HtmlEncode(group.Name);

            
            #line default
            #line hidden
            this.Write("    <li><a href=\"#");
            
            #line 226 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 226 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));
            
            #line default
            #line hidden
            this.Write(" (");
            
            #line 226 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(group.ItemCount));
            
            #line default
            #line hidden
            this.Write(" punkter)</a></li>\r\n");
            
            #line 227 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

}

            
            #line default
            #line hidden
            this.Write("</ul>\r\n<h2>Rapport</h2>\r\n");
            
            #line 232 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

foreach (CollectionViewGroup group in NotificationGroups)
{
	string groupNameEncoded;
	if (GroupByTables) {
		groupNameEncoded = HttpUtility.HtmlEncode(group.Name);
	}
	else
	{
		groupNameEncoded = HttpUtility.HtmlEncode(NotificationsUtility.NotificationTypeToString((NotificationType)group.Name));
	}

            
            #line default
            #line hidden
            this.Write("    <div id=\"");
            
            #line 244 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));
            
            #line default
            #line hidden
            this.Write("\">\r\n        <h3>\r\n\t\t\t");
            
            #line 246 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));
            
            #line default
            #line hidden
            this.Write("&nbsp;<span class=\"header-actions\"><a href=\"#oversigt\">[til oversigt]</a> <a href" +
                    "=\"javascript:void(0)\" onclick=\"expandAll(document.getElementById(\'");
            
            #line 246 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));
            
            #line default
            #line hidden
            this.Write("\'))\">[udvid eksempler]</a> <a href=\"javascript:void(0)\" onclick=\"collapseAll(docu" +
                    "ment.getElementById(\'");
            
            #line 246 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));
            
            #line default
            #line hidden
            this.Write("\'))\">[sammenfold eksempler]</a></span>\r\n\t\t</h3>\r\n        <table class=\"notificati" +
                    "ons-table\" id=\"");
            
            #line 248 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));
            
            #line default
            #line hidden
            this.Write("_table\">\r\n\t\t\t<thead>\r\n");
            
            #line 250 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	OutputNotificationHeaderRow(groupNameEncoded);

            
            #line default
            #line hidden
            this.Write("\t\t\t</thead>\r\n\t\t\t<tbody>\r\n");
            
            #line 255 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	int index = 0;
	foreach (INotification notification in group.Items)
	{
		OutputNotificationRow(notification, ++index % 2 == 0);
    }

            
            #line default
            #line hidden
            this.Write("\t\t\t</tbody>\r\n\t\t</table>\r\n\t</div>\r\n");
            
            #line 265 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

}

            
            #line default
            #line hidden
            this.Write("</body>\r\n</html>\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 271 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

private void OutputNotificationHeaderRow(string groupNameEncoded)
{

        
        #line default
        #line hidden
        
        #line 274 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t<tr>\r\n\t\t\t\t<th></th>\r\n\t\t\t\t<th class=\"sortable\" onclick=\"sortBy(this, document.g" +
        "etElementById(\'");

        
        #line default
        #line hidden
        
        #line 277 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));

        
        #line default
        #line hidden
        
        #line 277 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_table\'), 1)\"></th>\r\n");

        
        #line default
        #line hidden
        
        #line 278 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	if (!GroupByTables)
	{

        
        #line default
        #line hidden
        
        #line 281 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<th class=\"sortable\" onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 282 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));

        
        #line default
        #line hidden
        
        #line 282 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_table\'), 2)\">\r\n\t\t\t\t\t<strong>Tabel</strong>\r\n\t\t\t\t</th>\r\n");

        
        #line default
        #line hidden
        
        #line 285 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}

        
        #line default
        #line hidden
        
        #line 287 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<th class=\"sortable\" onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 288 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));

        
        #line default
        #line hidden
        
        #line 288 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_table\'), 2)\">\r\n\t\t\t\t\t<strong>Felt</strong>\r\n\t\t\t\t</th>\r\n");

        
        #line default
        #line hidden
        
        #line 291 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	if (GroupByTables)
	{

        
        #line default
        #line hidden
        
        #line 294 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<th class=\"sortable\" onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 295 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));

        
        #line default
        #line hidden
        
        #line 295 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_table\'), 3)\">\r\n\t\t\t\t\t<strong>Kategori</strong>\r\n\t\t\t\t</th>\r\n");

        
        #line default
        #line hidden
        
        #line 298 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}

        
        #line default
        #line hidden
        
        #line 300 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<th class=\"sortable\" onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 301 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));

        
        #line default
        #line hidden
        
        #line 301 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_table\'), 4)\">\r\n\t\t\t\t\t<strong>Antal</strong>\r\n\t\t\t\t</th>\r\n\t\t\t\t<th class=\"sortable\" " +
        "onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 304 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(groupNameEncoded));

        
        #line default
        #line hidden
        
        #line 304 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_table\'), 5)\">\r\n\t\t\t\t\t<strong>Besked</strong>\r\n\t\t\t\t</th>\r\n\t\t\t</tr>\r\n");

        
        #line default
        #line hidden
        
        #line 308 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

}

private void OutputNotificationRow(INotification notification, bool even)
{
	if (even) 
	{

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t<tr class=\"even\">\r\n");

        
        #line default
        #line hidden
        
        #line 317 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	} 
	else 
	{

        
        #line default
        #line hidden
        
        #line 321 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t<tr class=\"odd\">\r\n");

        
        #line default
        #line hidden
        
        #line 323 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}
	if (AnalysisErrorSamples.ContainsKey(notification))
	{

        
        #line default
        #line hidden
        
        #line 327 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td class=\"expander expanded\" onclick=\"toggleSamples(this, document.getElemen" +
        "tById(\'");

        
        #line default
        #line hidden
        
        #line 328 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Table.Folder));

        
        #line default
        #line hidden
        
        #line 328 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 328 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Column.ColumnId));

        
        #line default
        #line hidden
        
        #line 328 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 328 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Type));

        
        #line default
        #line hidden
        
        #line 328 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow\'))\"><span></span></td>\r\n");

        
        #line default
        #line hidden
        
        #line 329 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}
	else if (notification.Type == NotificationType.ForeignKeyTestError)
	{
		ForeignKey fkey = (notification as NotificationViewModel).ForeignKey;

        
        #line default
        #line hidden
        
        #line 334 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td class=\"expander expanded\" onclick=\"toggleSamples(this, document.getElemen" +
        "tById(\'");

        
        #line default
        #line hidden
        
        #line 335 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fkey.Name));

        
        #line default
        #line hidden
        
        #line 335 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow\'))\"><span></span></td>\r\n");

        
        #line default
        #line hidden
        
        #line 336 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}
	else
	{

        
        #line default
        #line hidden
        
        #line 340 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td></td>\r\n");

        
        #line default
        #line hidden
        
        #line 342 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}

        
        #line default
        #line hidden
        
        #line 344 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td>\r\n");

        
        #line default
        #line hidden
        
        #line 346 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	if (notification.Severity == Severity.Hint)
	{

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t<b style=\"background: yellow;\">!</b>\r\n");

        
        #line default
        #line hidden
        
        #line 351 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}
	else 
	{

        
        #line default
        #line hidden
        
        #line 355 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t<b style=\"background: red; color: white;\">X</b>\r\n");

        
        #line default
        #line hidden
        
        #line 357 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}

        
        #line default
        #line hidden
        
        #line 359 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t</td>\r\n");

        
        #line default
        #line hidden
        
        #line 361 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	if (!GroupByTables)
	{

        
        #line default
        #line hidden
        
        #line 364 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td>\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 366 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(notification.Table?.ToString() ?? "-")));

        
        #line default
        #line hidden
        
        #line 366 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t</td>\r\n");

        
        #line default
        #line hidden
        
        #line 368 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}

        
        #line default
        #line hidden
        
        #line 370 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td>\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 372 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(notification.Column?.ToString() ?? "-")));

        
        #line default
        #line hidden
        
        #line 372 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t</td>\r\n");

        
        #line default
        #line hidden
        
        #line 374 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	if (GroupByTables)
	{

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td>\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 379 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(NotificationsUtility.NotificationTypeToString(notification.Type)?.ToString() ?? "-")));

        
        #line default
        #line hidden
        
        #line 379 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t</td>\r\n");

        
        #line default
        #line hidden
        
        #line 381 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	}

        
        #line default
        #line hidden
        
        #line 383 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t<td>\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 385 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Count?.ToString() ?? "-"));

        
        #line default
        #line hidden
        
        #line 385 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 388 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(notification.Message?.ToString() ?? "-")));

        
        #line default
        #line hidden
        
        #line 388 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t</td>\r\n            </tr>\r\n");

        
        #line default
        #line hidden
        
        #line 391 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	switch (notification.Type)
	{
		case NotificationType.AnalysisErrorBlank:
        case NotificationType.AnalysisErrorOverflow:
        case NotificationType.AnalysisErrorUnderflow:
        case NotificationType.AnalysisErrorFormat:
        case NotificationType.AnalysisErrorRegex:
        case NotificationType.AnalysisErrorRepeatingChar:
        case NotificationType.AnalysisErrorUnallowedKeyword:
			OutputAnalysisSamples(notification);
			break;
		case NotificationType.ForeignKeyTestError:
			OutputForeignKeyTestErrorSamples(notification);
			break;
	}
}

private void OutputAnalysisSamples(INotification notification)
{


        
        #line default
        #line hidden
        
        #line 412 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("            <tr id=\"");

        
        #line default
        #line hidden
        
        #line 413 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Table.Folder));

        
        #line default
        #line hidden
        
        #line 413 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 413 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Column.ColumnId));

        
        #line default
        #line hidden
        
        #line 413 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 413 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Type));

        
        #line default
        #line hidden
        
        #line 413 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow\" class=\"samplerow\">\r\n\t\t\t\t<td colspan=\"6\">\r\n\t\t\t\t<table class=\"samples-t" +
        "able\" id=\"");

        
        #line default
        #line hidden
        
        #line 415 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Table.Folder));

        
        #line default
        #line hidden
        
        #line 415 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 415 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Column.ColumnId));

        
        #line default
        #line hidden
        
        #line 415 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 415 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Type));

        
        #line default
        #line hidden
        
        #line 415 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow_table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th class=\"sortable\" onclick=\"" +
        "sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Table.Folder));

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Column.ColumnId));

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Type));

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow_table\'), 0)\">\r\n\t\t\t\t\t\t\t<strong>Række</strong>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th c" +
        "lass=\"sortable\" onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 421 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Table.Folder));

        
        #line default
        #line hidden
        
        #line 421 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 421 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Column.ColumnId));

        
        #line default
        #line hidden
        
        #line 421 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 421 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Type));

        
        #line default
        #line hidden
        
        #line 421 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow_table\'), 1)\">\r\n\t\t\t\t\t\t\t<strong>Længde</strong>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th " +
        "class=\"sortable\" onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 424 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Table.Folder));

        
        #line default
        #line hidden
        
        #line 424 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 424 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Column.ColumnId));

        
        #line default
        #line hidden
        
        #line 424 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_");

        
        #line default
        #line hidden
        
        #line 424 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(notification.Type));

        
        #line default
        #line hidden
        
        #line 424 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow_table\'), 2)\">\r\n\t\t\t\t\t\t\t<strong>Data</strong>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n" +
        "\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n");

        
        #line default
        #line hidden
        
        #line 430 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	foreach (var post in AnalysisErrorSamples[notification])
	{

        
        #line default
        #line hidden
        
        #line 433 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 436 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(post.RowIndex + 1));

        
        #line default
        #line hidden
        
        #line 436 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 439 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(post.Data.Length));

        
        #line default
        #line hidden
        
        #line 439 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<span class=\"data\">");

        
        #line default
        #line hidden
        
        #line 442 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(post.Data));

        
        #line default
        #line hidden
        
        #line 442 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n");

        
        #line default
        #line hidden
        
        #line 445 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	} // foreach post

        
        #line default
        #line hidden
        
        #line 447 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</td>\r\n            </tr>\r\n");

        
        #line default
        #line hidden
        
        #line 452 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

}

private void OutputForeignKeyTestErrorSamples(INotification notification)
{
	ForeignKey fkey = (notification as NotificationViewModel).ForeignKey;


        
        #line default
        #line hidden
        
        #line 459 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("            <tr id=\"");

        
        #line default
        #line hidden
        
        #line 460 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fkey.Name));

        
        #line default
        #line hidden
        
        #line 460 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow\" class=\"samplerow\">\r\n\t\t\t\t<td colspan=\"6\">\r\n\t\t\t\t\t<table class=\"samples-" +
        "table\" id=\"");

        
        #line default
        #line hidden
        
        #line 462 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fkey.Name));

        
        #line default
        #line hidden
        
        #line 462 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow_table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th class=\"sortable\" onclic" +
        "k=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 465 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fkey.Name));

        
        #line default
        #line hidden
        
        #line 465 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow_table\'), 0)\">\r\n\t\t\t\t\t\t\t\t<strong>Antal</strong>\r\n\t\t\t\t\t\t\t</th>\r\n");

        
        #line default
        #line hidden
        
        #line 468 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

		int colidx = 1;
		foreach (var reference in fkey.References)
		{

        
        #line default
        #line hidden
        
        #line 472 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t\t<th class=\"sortable\" onclick=\"sortBy(this, document.getElementById(\'");

        
        #line default
        #line hidden
        
        #line 473 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fkey.Name));

        
        #line default
        #line hidden
        
        #line 473 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("_samplerow_table\'), ");

        
        #line default
        #line hidden
        
        #line 473 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(colidx));

        
        #line default
        #line hidden
        
        #line 473 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(")\">\r\n\t\t\t\t\t\t\t\t<strong>");

        
        #line default
        #line hidden
        
        #line 474 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(HttpUtility.HtmlEncode(reference.Column.Name)));

        
        #line default
        #line hidden
        
        #line 474 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("</strong>\r\n\t\t\t\t\t\t\t</th>\r\n");

        
        #line default
        #line hidden
        
        #line 476 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

			colidx++;
		}

        
        #line default
        #line hidden
        
        #line 479 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n");

        
        #line default
        #line hidden
        
        #line 483 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"


	foreach (var sample in ForeignKeyErrorSamples[fkey])
	{
		var values = sample.Item1.Values;
		var count = sample.Item2;

        
        #line default
        #line hidden
        
        #line 489 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 492 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(count));

        
        #line default
        #line hidden
        
        #line 492 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\r\n\t\t\t\t\t\t\t</td>\r\n");

        
        #line default
        #line hidden
        
        #line 494 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

		foreach (Post post in sample.Item1.Values)
		{

        
        #line default
        #line hidden
        
        #line 497 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t\t<td>\r\n");

        
        #line default
        #line hidden
        
        #line 499 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

			if (post.IsNull)
			{

        
        #line default
        #line hidden
        
        #line 502 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t\t\t<span class=\"value null\">NULL</span>\r\n");

        
        #line default
        #line hidden
        
        #line 504 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

			}
			else if (post.Data == string.Empty)
			{

        
        #line default
        #line hidden
        
        #line 508 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t\t\t<span class=\"value empty\">TOM</span>\r\n");

        
        #line default
        #line hidden
        
        #line 510 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

			}
			else
			{

        
        #line default
        #line hidden
        
        #line 514 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t\t\t<span class=\"value\">");

        
        #line default
        #line hidden
        
        #line 515 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(post.Data));

        
        #line default
        #line hidden
        
        #line 515 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("</span>\r\n");

        
        #line default
        #line hidden
        
        #line 516 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

			}

        
        #line default
        #line hidden
        
        #line 518 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t\t</td>\r\n");

        
        #line default
        #line hidden
        
        #line 520 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

		} // foreach post

        
        #line default
        #line hidden
        
        #line 522 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t</tr>\r\n");

        
        #line default
        #line hidden
        
        #line 524 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

	} // foreach sample

        
        #line default
        #line hidden
        
        #line 526 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"
this.Write("\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</td>\r\n            </tr>\r\n");

        
        #line default
        #line hidden
        
        #line 531 "C:\Users\EG5S\Source\Repos\TableDataAnalyzer\HardHornLight\Resources\NotificationLog.tt"

}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class NotificationLogBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
